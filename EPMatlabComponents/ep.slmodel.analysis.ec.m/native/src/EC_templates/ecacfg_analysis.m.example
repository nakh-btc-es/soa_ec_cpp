function stConfig = ecacfg_analysis(stConfig, stAdditionalInfo)
%
% stConfig                                      (struct)  describing settings needed for the analysis
%
%   .General                                    (struct)  describing general settings (see below stGeneral)
%       .AllowStubGeneration                    (boolean)
%       .GenerateSeparateStubFiles              (boolean)
%       .bExcludeScopesWithoutMapping           (boolean)
%       .bExcludeParamsWithoutMapping           (boolean)
%       .sStubCodeFolderPath                    (string)
% ----------------------
%   .ScopeCfg                                   (struct)   describing scope specific settings (see below stScopeCfg)
%       .RootScope                              (struct)   describing root scope specific settings
%           .SearchFromFunction                 (string)
%           .ForceUseOfModelStepFunc            (boolean)
%       .Subsys                                 (struct)
%           .PropFilter                         (array of structures)
%               .BlockParameterName             (string)
%               .BlockParameterValue            (string)
% ----------------------
%   .ParameterDOCfg                             (struct)
%       .SearchGlobal                           (struct)
%           .DataObjectName                     (string)
%           .DataObjectClass                    (string)
%           .FilterMethod                       (string)
%           .PropFilter                         (array of structures)
%               .Property                       (struct)
%                   .Name                       (string)
%                   .Value                      (cell array of strings)
% ----------------------
%   .CustomConstantStorageClasses               (cell array of strings)
% ----------------------
%   .LocalDOCfg                                 (struct)
%       .SearchGlobal                           (struct)
%           .DataObjectName                     (cell array of strings)
%           .DataObjectClass                    (cell array of strings)
%           .PropFilter                         (array of structures)
%               .Property                       (struct)
%                   .Name                       (string)
%                   .Value                      (cell array of strings)
% ----------------------
%   .DefineDOCfg                                (struct)
%       .SearchGlobal                           (struct)
%           .DataObjectName                     (cell array of strings)
%           .DataObjectClass                    (cell array of strings)
%           .PropFilter                         (array of structures)
%               .Property                       (struct)
%                   .Name                       (string)
%                   .Value                      (cell array of strings)

%%
%%------------------------------------------------------------------------------------------------------
%
% DEFAULT VALUES
%
%%------------------------------------------------------------------------------------------------------
%
% ss = 0; pp = 0; ll = 0; dd = 0;
% 
%General options
% stConfig.General.AllowStubGeneration                 = true;
% stConfig.General.GenerateSeparateStubFiles           = true;
% stConfig.General.bExcludeScopesWithoutMapping        = false;
% stConfig.General.bExcludeParamsWithoutMapping        = true;
% stConfig.General.sStubCodeFolderPath                 = '.';
% stConfig.General.sCodegenPath                        = '';
%
% 
% %Scopes identification
% stConfig.ScopeCfg.RootScope.SearchFromFunction       = '';    
% stConfig.ScopeCfg.RootScope.ForceUseOfModelStepFunc  = false;
% ss=ss+1;
% stConfig.ScopeCfg.Subsys.PropFilter(ss).BlockParameterName  = 'IsSubsystemVirtual';
% stConfig.ScopeCfg.Subsys.PropFilter(ss).BlockParameterValue = 'off';
% ss=ss+1;
% stConfig.ScopeCfg.Subsys.PropFilter(ss).BlockParameterName  = 'RTWSystemCode';
% stConfig.ScopeCfg.Subsys.PropFilter(ss).BlockParameterValue = {'Nonreusable function', 'Reusable function'}; 
% 
% 
% %Parameters interfaces identification
% stConfig.ParameterDOCfg.SearchGlobal.DataObjectName  = {'.'};
% stConfig.ParameterDOCfg.SearchGlobal.DataObjectClass = {'BTC.Parameter', 'Simulink.Parameter', 'mpt.Parameter', 'Simulink.Breakpoint', 'Simulink.LookupTable'};
% stConfig.ParameterDOCfg.SearchGlobal.FilterMethod    = 'WhiteList'; 
% stConfig.ParameterDOCfg.SearchGlobal.PropFilter      = [];
% pp=pp+1;
% stConfig.ParameterDOCfg.SearchGlobal.PropFilter(pp).Property(1).Name  = 'CoderInfo.StorageClass';
% stConfig.ParameterDOCfg.SearchGlobal.PropFilter(pp).Property(1).Value = {'Custom'};
% stConfig.ParameterDOCfg.SearchGlobal.PropFilter(pp).Property(2).Name  = 'CoderInfo.CustomStorageClass';
% stConfig.ParameterDOCfg.SearchGlobal.PropFilter(pp).Property(2).Value = {'Const', 'Default', 'ConstVolatile',...
%     'Global','ExportToFile','Volatile',...
%     'ImportFromFile', 'GetSet', 'Struct'};
% pp=pp+1;
% stConfig.ParameterDOCfg.SearchGlobal.PropFilter(pp).Property(1).Name  = 'CoderInfo.StorageClass';
% stConfig.ParameterDOCfg.SearchGlobal.PropFilter(pp).Property(1).Value = {'ExportedGlobal','ImportedExtern'};
% 
%% Set of accepted storage classes for constants
% stConfig.CustomConstantStorageClasses = {'Define', 'ImportedDefine'};
%
% 
% %Locals interfaces identification
% stConfig.LocalDOCfg.SearchGlobal.DataObjectName           = {'.'}; 
% stConfig.LocalDOCfg.SearchGlobal.DataObjectClass          = {'BTC.Signal', 'Simulink.Signal', 'mpt.Signal'};
% stConfig.LocalDOCfg.SearchGlobal.PropFilter               = [];
% ll=ll+1;
% stConfig.LocalDOCfg.SearchGlobal.PropFilter(ll).Property(1).Name     = 'CoderInfo.StorageClass';
% stConfig.LocalDOCfg.SearchGlobal.PropFilter(ll).Property(1).Value    = {'Custom'};
% stConfig.LocalDOCfg.SearchGlobal.PropFilter(ll).Property(2).Name     = 'CoderInfo.CustomStorageClass';
% stConfig.LocalDOCfg.SearchGlobal.PropFilter(ll).Property(2).Value    = {'Global','FileScope','Reusable','ExportToFile',...
%     'Default','GetSet','ImportFromFile',...
%     'BitField','Struct','Volatile'};
% ll=ll+1;
% stConfig.LocalDOCfg.SearchGlobal.PropFilter(ll).Property(1).Name     = 'CoderInfo.StorageClass';
% stConfig.LocalDOCfg.SearchGlobal.PropFilter(ll).Property(1).Value    = {'ExportedGlobal','ImportedExtern'};
% 
% 
% %Defines macros identification (for Stub generation)
% %Regular Expressions:  "^c" for every parameter starting with "c" (e.g. cParamName)
% stConfig.DefineDOCfg.SearchGlobal.DataObjectName      = {'.'};
% stConfig.DefineDOCfg.SearchGlobal.DataObjectClass     = {'BTC.Parameter', 'Simulink.Parameter', 'mpt.Parameter'};
% stConfig.DefineDOCfg.SearchGlobal.PropFilter          = [];
% dd=dd+1;
% stConfig.DefineDOCfg.SearchGlobal.PropFilter(dd).Property(1).Name     = 'CoderInfo.StorageClass';
% stConfig.DefineDOCfg.SearchGlobal.PropFilter(dd).Property(1).Value    = {'Custom'};
% stConfig.DefineDOCfg.SearchGlobal.PropFilter(dd).Property(2).Name     = 'CoderInfo.CustomStorageClass';
% stConfig.DefineDOCfg.SearchGlobal.PropFilter(dd).Property(2).Value    = {'ImportedDefine'};
end