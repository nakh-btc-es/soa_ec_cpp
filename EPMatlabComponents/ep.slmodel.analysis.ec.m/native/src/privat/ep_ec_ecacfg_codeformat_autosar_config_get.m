function stConfig = ep_ec_ecacfg_codeformat_autosar_config_get(~, ~)
    stConfig = i_get_default_config();
end

%%
function stDefaultConfig = i_get_default_config()
%Notations used for the default values
% <apiname> : name of rte api
% <c> : name of component
% <re> : name of runnable
% <p> : name of port
% <o> : name of data element or operation
% <g> : name of the mode group
% <idt>: implementation datatype
% <codedt>: base code datatype

ii = 0;

%% SR Interface / Status Receiver -> Rte_IStatus
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'Status Receiver';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'SenderReceiver';
stDefaultConfig.ArCom(ii).Filter.sPortType = {'Receiver', 'SenderReceiverPortIN'};
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ErrorStatus';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IStatus';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'Std_ReturnType <apiname>_<p>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>_err';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';

%% SenderReceiver / Explicit Receiver -> Rte_Read
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR Explicit Receiver';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'SenderReceiver';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Receiver';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ExplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Read';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'Std_ReturnType <apiname>_<p>_<o>(OUT <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = 'RteStub_<if>_<p>_<o>_err';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'output';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argOut';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver / Queued Explicit Receiver -> Rte_Receive
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR Queued Explicit Receiver';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'SenderReceiver';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Receiver';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'QueuedExplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Receive';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'Std_ReturnType <apiname>_<p>_<o>(OUT <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = 'RteStub_<if>_<p>_<o>_err';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'output';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argOut';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% NvData / Explicit Receiver -> Rte_Read
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'NvData Explicit Receiver';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'NvData';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Receiver';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ExplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Read';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'Std_ReturnType <apiname>_<p>_<o>(OUT <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'output';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argOut';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver / Explicit SenderReceiverPortIN -> Rte_Read
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR Explicit SenderReceiverPortIN';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'SenderReceiver';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'SenderReceiverPortIN';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ExplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Read';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'Std_ReturnType <apiname>_<p>_<o>(OUT <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = 'RteStub_<if>_<p>_<o>_err';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'output';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argOut';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% NvData / Explicit SenderReceiverPortIN -> Rte_Read
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'NvData Explicit SenderReceiverPortIN';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'NvData';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'SenderReceiverPortIN';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ExplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Read';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'Std_ReturnType <apiname>_<p>_<o>(OUT <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'output';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argOut';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver and NvData / Explicit Sender -> Rte_Write : For Non-Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Explicit Sender (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Sender';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ExplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Write';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void <apiname>_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver and NvData / Explicit Sender -> Rte_Write : For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Explicit Sender (Non-virtual buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Sender';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ExplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement & ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Write';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void <apiname>_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver/ Queued Explicit Sender -> Rte_Send : For Non-Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR Queued Explicit Sender (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'SenderReceiver';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Sender';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'QueuedExplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Send';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void <apiname>_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver / Queued Explicit Sender -> Rte_Send : For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR Queued Explicit Sender (Non-virtual buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'SenderReceiver';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Sender';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'QueuedExplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement & ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Send';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void <apiname>_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver and NvData / Explicit SenderReceiverPortOUT -> Rte_Write : For Non-Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Explicit SenderReceiverPortOUT (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'SenderReceiverPortOUT';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ExplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Write';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void <apiname>_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver and NvData / Explicit SenderReceiverPortOUT -> Rte_Write : For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Explicit SenderReceiverPortOUT (Non-virtual buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'SenderReceiverPortOUT';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ExplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement & ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Write';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void <apiname>_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(2).sDataType = '<idt>';

%% SenderReceiver and NvData / Implicit Receiver -> Rte_IRead : For non Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Implicit Receiver (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Receiver';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ImplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IRead';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> <apiname>_<re>_<p>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';

%% SenderReceiver and NvData / Implicit Receiver -> Rte_IRead : For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Implicit Receiver (Non-virtual buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Receiver';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ImplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement && ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IRead';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> <apiname>_<re>_<p>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';

%% SenderReceiver and NvData / Implicit SenderReceiverPortIN -> Rte_IRead : For non Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Implicit SenderReceiverPortIN (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'SenderReceiverPortIN';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ImplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IRead';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> <apiname>_<re>_<p>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';

%% SenderReceiver and NvData / Implicit SenderReceiverPortIN -> Rte_IRead : For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Implicit SenderReceiverPortIN (Non-virtual buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'SenderReceiverPortIN';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ImplicitReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement && ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IRead';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> <apiname>_<re>_<p>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';

%% SenderReceiver and NvData / Implicit Sender -> Rte_IWrite : For Non-Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Implicit Receiver (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Sender';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ImplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IWrite';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void Rte_IWrite_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = '<idt>';

%% SenderReceiver and NvData / Implicit Sender -> Rte_IWrite : For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Implicit Sender (Non-virtual Buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Sender';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ImplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement && ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IWrite';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void Rte_IWrite_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = '<idt>';

%% SenderReceiver and NvData / Implicit SenderReceiverPortOUT -> Rte_IWrite : For Non-Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Implicit SenderReceiverPortOUT (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'SenderReceiverPortOUT';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ImplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IWrite';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void Rte_IWrite_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = '<idt>';

%% SenderReceiver and NvData / Implicit SenderReceiverPortOUT -> Rte_IWrite : For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SR or NvData Implicit SenderReceiverPortOUT (Non-virtual Buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = {'SenderReceiver','NvData'};
stDefaultConfig.ArCom(ii).Filter.sPortType = 'SenderReceiverPortOUT';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ImplicitSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement && ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IWrite';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void Rte_IWrite_<re>_<p>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<if>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = '<idt>';

%% CalPrm Interface Autosar 4.x
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'CalPrm Interface 4.x';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {'4.0', '4.1', '4.2', '4.3', '4.4', 'R19-11', 'R20-11', 'R21-11', 'R22-11'};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'Calibration';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'ReceiverCalPrm';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = '';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Prm';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> Rte_Prm_<p>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '<apiname>_<p>_<o>_data';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = false;

%% CalPrm Interface Autosar 3.x
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'CalPrm Interface 3.x';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {'3.1', '3.2'};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'Calibration';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'ReceiverCalPrm';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = '';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Calprm';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> Rte_Calprm_<p>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<p>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '<apiname>_<p>_<o>_data';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = false;

%% Internal CalPrm
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'Internal CalPrm';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'InternalCalibration';
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_CData';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> Rte_CData_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '<apiname>_<o>_data';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = false;

%% Constant Memory
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'Constant Memory';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'ConstantMemory';
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = '';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '<name>';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = false;

%% Implicit Inter Runnable (Rte_IrvIRead) -> Non Bus interface
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'IRV Implicit Read (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType  = 'InterRunnableVariable';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'Implicit';
stDefaultConfig.ArCom(ii).Filter.sItfKind = 'IN';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IrvIRead';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> Rte_IrvIRead_<re>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';


%% Implicit Inter Runnable (Rte_IrvIRead) -> Bus interface
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'IRV Implicit Read (Non-virtual buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType  = 'InterRunnableVariable';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'Implicit';
stDefaultConfig.ArCom(ii).Filter.sItfKind = 'IN';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement & ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IrvIRead';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> Rte_IrvIRead_<re>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';


%% Implicit Inter Runnable -> Rte_IrvIWrite: For Non-Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'IRV Implicit Write (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'InterRunnableVariable';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'Implicit';
stDefaultConfig.ArCom(ii).Filter.sItfKind = 'OUT';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IrvIWrite';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void Rte_IrvIWrite_<re>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = '<idt>';

%% Implicit Inter Runnable -> Rte_IrvIWrite: For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'IRV Implicit Write (Non-virtual buses)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'InterRunnableVariable';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'Implicit';
stDefaultConfig.ArCom(ii).Filter.sItfKind = 'OUT';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement && ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IrvIWrite';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void Rte_IrvIWrite_<re>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = '<idt>';

%% Explicit Inter Runnable Variable (Rte_IrvRead) -> Scalar/Array
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'IRV Explicit Read (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'InterRunnableVariable';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'Explicit';
stDefaultConfig.ArCom(ii).Filter.sItfKind = 'IN';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.bIsScalar && ~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IrvRead';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> Rte_IrvRead_<re>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';

%% Explicit Inter Runnable Variable (Rte_IrvRead) -> Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'IRV Explicit Read (Non-virtual bus)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'InterRunnableVariable';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'Explicit';
stDefaultConfig.ArCom(ii).Filter.sItfKind = 'IN';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '(oItf.isBusElement && ~oItf.metaBus.isVirtual) || (~oItf.bIsScalar)';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IrvRead';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<return> Rte_IrvRead_<re>_<o>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'output';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = 'argOut';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';


%% Explicit Inter Runnable Variable -> Rte_IrvWrite : For Non-Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'IRV Explicit Write (Scalar/Array)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'InterRunnableVariable';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'Explicit';
stDefaultConfig.ArCom(ii).Filter.sItfKind = 'OUT';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '~oItf.isBusElement';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IrvWrite';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void Rte_IrvWrite_<re>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = '<idt>';

%% Explicit Inter Runnable Variable -> Rte_IrvWrite : For Buses
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'IRV Explicit Write (Non-virtual bus)';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'InterRunnableVariable';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'Explicit';
stDefaultConfig.ArCom(ii).Filter.sItfKind = 'OUT';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = 'oItf.isBusElement && ~oItf.metaBus.isVirtual';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_IrvWrite';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'void Rte_IrvWrite_<re>_<o>(IN <data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<c>_<re>_<o>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<o>';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = 'const';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = '<idt>';

%% Per Instance memory
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'Per Instance memory';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'PerInstanceMemory';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Pim';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<type>/<return reference> Rte_Pim_<name>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<name>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<name>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '<apiname>_<name>_data';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = false;


%% Switch Mode (Receive)
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SwitchMode Receive Ports';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType = 'ModeSwitch';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Receiver';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ModeReceive';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Mode';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = '<idt> <apiname>_<p>_<g>()';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<g>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<p>_<g>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<p>_<g>_ModeSwitch';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomGetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomGetFunArgs(1).sDataType = '<idt>';

%% Switch Mode (Send)
ii=ii+1;
stDefaultConfig.ArCom(ii).Filter.ID = 'SwitchMode Sender Ports';
stDefaultConfig.ArCom(ii).Filter.RestrictedArVersion = {};
stDefaultConfig.ArCom(ii).Filter.sComType = 'Interface';
stDefaultConfig.ArCom(ii).Filter.sInterfaceType =   'ModeSwitch';
stDefaultConfig.ArCom(ii).Filter.sPortType = 'Sender';
stDefaultConfig.ArCom(ii).Filter.sAccessMode = 'ModeSend';
stDefaultConfig.ArCom(ii).Filter.bMultipleSwcInstance = false;
stDefaultConfig.ArCom(ii).Filter.bAdditionalCondEval = '';
stDefaultConfig.ArCom(ii).Format.sRteApiName = 'Rte_Switch';
stDefaultConfig.ArCom(ii).Format.sRteApiSignature = 'Std_ReturnType <apiname>_<p>_<o>(IN <Data>)';
stDefaultConfig.ArCom(ii).Format.sRteApiReference = '<apiname>_<re>_<p>_<g>';
stDefaultConfig.ArCom(ii).Format.sRteApiMapping = '<apiname>_<p>_<g>';
stDefaultConfig.ArCom(ii).Format.sRteVariableName = '';
stDefaultConfig.ArCom(ii).Format.b2DMatlabIs1DCode  = true; %generated as Malab Column-Major format
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo1DCodeConv = 'ColumnMajor'; %RowMajor
%possible values are 'M_RowCol_C_ColRow' or 'M_RowCol_C_RowCol'; applies only if b2DMatlabIs1DCode = true;
stDefaultConfig.ArCom(ii).Format.s2DMatlabTo2DCodeConv = 'M_RowCol_C_RowCol';
stDefaultConfig.ArCom(ii).Format.bToBeStubbed = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo = Eca.MetaStubIntefaceInfo;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubType = 'function';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubFuncType = 'Custom'; %'SimulinkGetSet' or 'Custom'
stDefaultConfig.ArCom(ii).Format.oStubInfo.bStubVariable = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomVariableName = 'RteStub_<p>_<g>_ModeSwitch';
stDefaultConfig.ArCom(ii).Format.oStubInfo.sStubCustomSetFunName = stDefaultConfig.ArCom(ii).Format.sRteApiMapping;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs = Eca.MetaFunArg; %Array of objects Eca.MetaFunArg
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bMapToStubVar = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sKind = 'return';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sArgName = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(1).sDataType = 'Std_ReturnType';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(2).bMapToStubVar = true;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(2).sKind = 'input';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(2).sArgName = 'argIn';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(2).sQualiferScalar = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(2).sQualiferArray = '';
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(2).bIsPointer = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(2).bArrayPointerNotation = false;
stDefaultConfig.ArCom(ii).Format.oStubInfo.aoStubCustomSetFunArgs(2).sDataType = '<idt>';
end
