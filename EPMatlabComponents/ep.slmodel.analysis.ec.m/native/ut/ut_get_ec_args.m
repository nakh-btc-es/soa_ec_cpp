function stArgs = ut_get_ec_args(xEnv, sModelFile, sInitScript, sResultDir, stOverrideArgs)
if (nargin < 5)
    stOverrideArgs = struct();
end

stArgs = struct( ...
    'ModelFile',              sModelFile, ...
    'InitScriptFile',         sInitScript, ...
    'AddModelInfoFile',       fullfile(sResultDir, 'AddModelInfo.xml'), ...
    'SlArchFile',             fullfile(sResultDir, 'SlArch.xml'), ...
    'SlConstrFile',           fullfile(sResultDir, 'SlConstr.xml'), ...
    'MappingFile',            fullfile(sResultDir, 'Mapping.xml'), ...
    'ConstantsFile',          fullfile(sResultDir, 'ecConstants.xml'), ...
    'CodeModelFile',          fullfile(sResultDir, 'CodeModel.xml'), ...
    'MessageFile',            fullfile(sResultDir, 'Messages.xml'), ...
    'DSReadWriteObservable',  false, ...
    'ParameterHandling',      'ExplicitParam', ...
    'TestMode',               'GreyBox', ...
    'AddCodeModel',           'yes', ...
    'AssertPluginUnique',     false, ...
    'Environment',            xEnv, ...
    'HandleModelOpenClose',   false, ...
    'GlobalConfigFolderPath', '', ...
    'ReuseExistingCode',      'no');

% for now use a fixed name
stArgs.AdaptiveStubcodeXmlFile = fullfile(fileparts(stArgs.CodeModelFile), 'stubCodeAA.xml');

stArgs = i_mergeStruct(stArgs, stOverrideArgs);
end

%%
function stArgs = i_mergeStruct(stArgs, stOverrideArgs)
casArgNames = fieldnames(stOverrideArgs);
for i = 1:numel(casArgNames)
    sArgName = casArgNames{i};
    
    if isfield(stArgs, sArgName)
        stArgs.(casArgNames{i}) = stOverrideArgs.(casArgNames{i});
    else
        error('UT:ERROR:WRONG_USAGE', 'Argument "%s" does not exist!', sArgName);
    end
end
end