function it_ep_enumsSLDD_sl_interactive_simulation()
% Tests the ep_sim_harness_create method

sltu_clear_classes;
[xOnCleanUpCloseModel, stTestData] = sltu_prepare_simenv('SLDD_EnumerationParameter', 'SL', 'enum_sldd_top', ...
    'enum_sldd_top'); %#ok

sOrgSimMode = 'SL MIL';
stExtractInfo = sltu_extract_model(stTestData, ...
    'OriginalSimulationMode', sOrgSimMode);

stExtractOpenInfo = ep_sim_open_model(...
    'Kind',        stTestData.sModelKind,...
    'ModelFile',   stExtractInfo.ExtractionModel, ...
    'InitScripts', {stExtractInfo.InitScript}, ...
    'InitModel',   false, ...
    'AddPaths',    {fileparts(stTestData.sModelFile)}, ...
    'ActivateMil', false, ...
    'MessageFile', stTestData.sMessageFile);
xOnCleanUpCloseExtModel = onCleanup(@() ep_sim_close_model(stExtractOpenInfo));

open_system(stExtractInfo.ExtractionModel);

[~, stResult] = sltu_simulate_model(stTestData, ...
    stExtractInfo, ...
    'ExecutionMode', sOrgSimMode, ...
    'InteractiveSimulation', true);
try
    % run the interactive simulation again
    sltu_simulate_model(stTestData, ...
        stExtractInfo, ...
        'ExecutionMode', sOrgSimMode, ...
        'InteractiveSimulation', true);
catch oEx
    MU_FAIL('The interactive simulation should be able to run several times in a row.')
    throw(oEx);
end

SLTU_ASSERT_SELF_CONTAINED_MODEL(stResult.sModelName);
SLTU_ASSERT_EQUAL_VECTORS(stTestData.sTestVectorFile, stResult.sSimulatedVector);

clear xOnCleanUpCloseExtModel;
if ~verLessThan('matlab' , '9.5')
    MU_ASSERT_TRUE(isempty(Simulink.findIntEnumType), ...
        'After closing the extraction model the enum definition should be cleared');
end
end