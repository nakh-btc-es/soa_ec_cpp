function it_slmil_derive_dsm_same_input()
% Checks the derived test vectors

casScopeID  = {'28n'};
sOrgSimMode = 'SL MIL';

[oOnCleanUpCloseModel, stTestData] = sltu_prepare_simenv(...
    'DataStoreMemory', ...
    'SL', ...
    'dsm_model', ...
    'top', ...
    [], ...
    casScopeID);

stExtractInfo = sltu_extract_model(...
    stTestData, ...
    'OriginalSimulationMode', sOrgSimMode, ...
    'EnableSubsystemLogging', true);

[oOnCleanUpCloseExtrModel, stSimulationResult] = sltu_derive_model(...
    stTestData, ...
    stExtractInfo, ...
    'ExecutionMode', sOrgSimMode);


% scan the extracted model for logging artefacts
ahStateLogger = find_system(stSimulationResult.sModelName, 'name', 'btc_mem');
MU_ASSERT_TRUE(length(ahStateLogger)==1, ['Number of state loggers is not "1" but "',...
    num2str(length(ahStateLogger)), '"']);
ahPortLogger = find_system(stSimulationResult.sModelName, 'name', 'btc_cast');
MU_ASSERT_TRUE(length(ahPortLogger)==3, ['Number of port loggers is not "3" but "',...
    num2str(length(ahPortLogger)), '"']);

oCleanupTestEnv = onCleanup(@() cellfun(@delete, {oOnCleanUpCloseModel, oOnCleanUpCloseExtrModel}));
SLTU_ASSERT_DERIVED_VECTOR(stTestData);
end
